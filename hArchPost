#!/usr/bin/env bash

#hArchPost - Post install - Downloadeded after Harch finishes
# ---------------------------------------------------------------
# Author    : Chaotic_Guru                                       |
# Github    : https://github.com/ChaoticHackingNetwork           |
# Discord   : https://discord.gg/nv445EX (ChaoticHackingNetwork) |
# Version   : 0.1.3		                                 |
# ---------------------------------------------------------------

GREEN='\033[0;32m'
RED='\033[0;31m'
WHITE='\033[0;37m'
YELLOW='\033[0;33m'
PURPLE='\033[0;35m'
RESET='\033[0m'
NEWLINE=$'\n'

installer() {
	#Installs needed packages
	echo ${NEWLINE}
	echo -e "[${YELLOW}INFO${RESET}] Enabling Parallel Downloads..."
	sed -i '/#ParallelDownloads/s/^#//g' /etc/pacman.conf
	echo ${NEWLINE}
	echo -e "[${YELLOW}INFO${RESET}] Installing some handy packages...${NEWLINE}"
	pacman -S dkms linux-headers chromium firefox discord dhcpcd iwd mlocate cmake ntp btop neofetch pulseaudio cherrytree git net-tools dnsutils terminator zsh git fish leafpad --needed --noconfirm
	# Basic Fonts
	pacman -S noto-fonts ttf-ubuntu-font-family ttf-dejavu ttf-freefont ttf-liberation ttf-droid ttf-roboto terminus-font rxvt-unicode ranger rofi dmenu --needed --noconfirm
	timedatectl set-ntp true
	hwclock —-systohc
}

desktopEnv() {
	#WIP - Choose DE - If Mate and Nvidia graphics, check comp manager
	echo -e "[${GREEN}USER_INPUT${RESET}]"
	echo -e "Choose a Desktop Enviornment"
	echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns${NEWLINE}"
	DEs=("Mate" "KDE" "Gnome" "Cinnamon" "Deepin" "Enlightenment" "i3" "Skip")
	select opt in "${DEs[@]}"
	do
		case $opt in 
			"Mate")
				pacman -S mate mate-extra lightdm lightdm-gtk-greeter xorg-server xorg-xinit --needed --noconfirm
				#Disable compositing if nvidia graphics
				NVD='NVIDIA'
				card=$(lspci -vmm | grep VGA -A6)
				case $card in 
					*"$NVD"*)
						#Fixes screen tearing for mulit-head or hybrid graphics
						echo "WIP"
						;;
				esac
				systemctl enable lightdm
				echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns"
				;;
			"KDE")
				pacman -S plasma-meta sddm plasma-desktop xorg-server xorg-apps xorg-xinit --needed --noconfirm
				#If nvidia graphics, add stacked compositer
				NVD='NVIDIA'
				card=$(lspci -vmm | grep VGA -A6)
				case $card in 
					*"$NVD"*)
						pacman -S kwin plasma-wayland-session --needed --noconfirm
						;;
				esac
				systemctl enable sddm
				echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns"
				;;
			"Gnome")
				pacman -S gnome gnome-extra gdm xorg-server xorg-apps xorg-xinit --needed --noconfirm
				systemctl enable gdm
				echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns"
				;;
			"Cinnamon")
				pacman -S cinnamon metacity gnome-shell gdm xorg-server xorg-apps xorg-xinit --needed --noconfirm
				systemctl enable gdm
				echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns"
				;;
			"Deepin")
				pacman -S deepin deepin-extra lightdm lightdm-deepin-greeter xorg-server xorg-apps xorg-xinit --needed --noconfirm
				systemctl enable lightdm
				echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns"
				;;
			"Enlightenment")
				pacman -S enlightenment terminology xorg-server xorg-apps xorg-xinit lxdm --needed --noconfirm
				systemctl enable lxdm
				echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns"
				;;
			"i3")
				pacman -S i3-gaps i3blocks i3lock numlockx gdm xorg-server xorg-apps xorg-xinit --needed --noconfirm
				systemctl enable gdm
				echo -e "[${YELLOW}SYNTAX${RESET}] Select number corresponding too DE you want, after install enter 8 to continue if prompt returns"
				;;
			"Skip")
				break
				;;
			*) echo -e "[${RED}ERROR${RESET}]Invalid Option, Try Again..."
		esac
	done

}


sublimeInstaller() {
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "[${YELLOW}SYNTAX${RESET}] Installing Sublime Text...${NEWLINE}"
	curl -O https://download.sublimetext.com/sublimehq-pub.gpg && pacman-key --add sublimehq-pub.gpg && pacman-key --lsign-key 8A8F901A && rm sublimehq-pub.gpg
	sleep 3
	echo -e "\n[sublime-text]\nServer = https://download.sublimetext.com/arch/stable/x86_64" | tee -a /etc/pacman.conf
	sleep 3
	pacman -Syu sublime-text --noconfirm
}

vidDriver() {
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "[${YELLOW}INFO${RESET}] Gathering Graphics info..."
	echo ${NEWLINE}
	echo ${NEWLINE}
	sleep 2
	str=$(lspci -vmm | grep VGA -A6)
	AMD='AMD'
	NVD='NVIDIA'
	case $str in
		*"$AMD"*)
			echo -e "[${YELLOW}INFO${RESET}] Installing AMD Drivers...${NEWLINE}"
			pacman -S xf86-video-ati xf86-video-amdgpu mesa --noconfirm
			;;

		*"$NVD"*)
			echo -e "[${YELLOW}INFO${RESET}] Installing NVIDIA Drivers...${NEWLINE}"
			pacman -S nvidia nvidia-settings nvidia-utils glxinfo nvtop --noconfirm
			curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/hArch/main/nvidia.hook
			curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/hArch/main/20-nvidia.conf
			mv /nvidia.hook /etc/pacman.d/hooks
			mv /20-nvidia.conf /etc/X11/xorg.conf.d/
			bash -c “echo blacklist nouveau > /etc/modprobe.d/blacklist-nvidia-nouveau.conf”
			# Add changes to mkinitcpio.conf - WIP
			# If issues, try:
			# xrandr --setprovideroutputsource modesetting NVIDIA-0
			# xrandr --auto
			;;
		*)
			echo -e "[${YELLOW}INFO${RESET}] Unable to determine Graphics info.. Installing default drivers"
			pacman -S xf86-video-fbdev --noconfirm
	esac

}

userInfo() {
	#Set root password
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "[${GREEN}USER_INPUT${RESET}]"
	echo -e "[${GREEN}USER${RESET}] Please set ROOT password!!!"
	passwd
	#Create a new user
	read -p "Enter Username: " username
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "${GREEN}------> hArch welcomes you $username! <------${RESET}"
	echo ${NEWLINE}
	echo ${NEWLINE}
	useradd -mg users -G wheel,power,storage -s /usr/bin/fish $username
	echo '%wheel ALL=(ALL:ALL) ALL' >> /etc/sudoers.d/wheel_group
    	chmod 440 /etc/sudoers.d/wheel_group
	echo -e "[${GREEN}USER${RESET}] Please set your password now!"
	passwd $username
}

booter() {
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "[${YELLOW}INFO${RESET}] Setting Booterloader...${NEWLINE}"
	drives=$(lsblk -f)
	echo ${NEWLINE}
	echo -e "[${GREEN}USER_INPUT${RESET}]"
	echo -e "$drives${NEWLINE}"
	echo "[${YELLOW}SYNTAX${RESET}] If BIOS, attach bootloader to disk: ex- /dev/sda"
	echo "[${YELLOW}SYNTAX${RESET}] If UEFI, attach bootloader to partition: ex- /dev/nvme0n1p1"
	read -p "Enter Drive to install Booterloader [Example: /dev/nvme0n1p1]: " drive
	if [[ -d "/sys/firmware/efi" ]]
	then
	pacman -S efibootmgr grub dosfstools mtools os-prober --noconfirm
	grub-install --target=x86_64-efi --bootloader-id=HARCH_UEFI --efi-directory=/boot/EFI --recheck
	grub-mkconfig -o /boot/grub/grub.cfg
	mkinitcpio -p linux
	else
	pacman -S grub --noconfirm
	grub-install --target=i386-pc $drive --recheck
	grub-mkconfig -o /boot/grub/grub.cfg
	mkinitcpio -p linux

	fi
}

blackArch() {
	#Install BlackArch Mirror & download tools list
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "[${YELLOW}INFO${RESET}] Installing BlackArch Repo...${NEWLINE}"
	curl -O https://blackarch.org/strap.sh
	chmod +x strap.sh
	./strap.sh
	sleep 3
	pacman -Syu --noconfirm
	
}

vimSetup() {
	echo ${NEWLINE}
	echo ${NEWLINE}
	read -p "[${GREEN}USER${RESET}] Do you want to add Bunle to VIM? [y/n]: " vim
	if [[ $vim == 'y' ]] || [[ $vim == 'Y' ]]
	then 
	curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/hArch/main/vimrc_bundle_conf
	users=$(ls /home)
	mv vimrc_bundle_conf /home/$users/.vimrc
	else
	echo -e "[${YELLOW}SKIPPING${RESET}]"
	
	fi
}

hackTools() {
	echo ${NEWLINE}
	echo ${NEWLINE}
	read -p 'Do you want to add the Master Hacking Toolset? [y/n]: ' ht
	if [[ $ht == 'y' ]] || [[ $ht == 'Y' ]]
	then
	echo -e "[${YELLOW}INFO${RESET}] Please Wait... Installing Tools"
	echo ${NEWLINE}
	echo "Grab a coffee, play with your pet...${RESET}"
	echo ${NEWLINE}
	curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/hArch/main/Tools/Master
	curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/hArch/main/Tools/useful-packages
	pacman -S - < /Master --noconfirm && pacman -S - < /useful-packages --noconfirm
	else
	curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/hArch/main/Tools/Master
	curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/hArch/main/Tools/useful-packages
	echo -e "[${YELLOW}SKIPPING${RESET}]"
	sleep 5
	
	fi
}


complete() {
	#Successfully Installed
	neofetch
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "[${YELLOW}INFO${RESET}] hArch has been succesfully installed on your system"
	echo ${NEWLINE}
	echo -e "${PURPLE}Hack the Universe $username${RESET}"
	echo ${NEWLINE}
	echo ${NEWLINE}
	echo -e "[${YELLOW}INFO${RESET}] A reboot should now take place"
	echo "[${YELLOW}INFO${RESET}] Run the following commands to reboot properly!"
	echo ${NEWLINE}
	echo -e "${GREEN}[1]: exit"
	echo -e "[2]: umount -a"
	echo -e "[3]: reboot${RESET}"

	exit
}

oneFuncToRuleThemAll() {
	installer
	sleep 3
	clear
	userInfo
	sleep 3
	clear
	vidDriver
	sleep 3
	clear
	booter
	sleep 3
	clear
	sublimeInstaller
	sleep 3
	clear
	blackArch
	sleep 3
	clear
	hackTools
	sleep 3
	clear
	vimSetup
	sleep 3
	clear
	desktopEnv
	sleep 3
	clear

	complete

}


oneFuncToRuleThemAll
